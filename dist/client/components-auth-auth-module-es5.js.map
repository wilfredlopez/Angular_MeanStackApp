{"version":3,"sources":["webpack:///./src/app/components/auth/login/login.component.html","webpack:///./src/app/components/auth/signup/signup.component.html","webpack:///./src/app/components/auth/auth-routing.ts","webpack:///./src/app/components/auth/auth.module.ts","webpack:///./src/app/components/auth/login/login.component.css","webpack:///./src/app/components/auth/login/login.component.ts","webpack:///./src/app/components/auth/signup/signup.component.css","webpack:///./src/app/components/auth/signup/signup.component.ts"],"names":[],"mappings":"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","file":"components-auth-auth-module-es5.js","sourcesContent":["module.exports = \"<mat-spinner *ngIf=\\\"isLoading\\\" style=\\\"margin: auto\\\"></mat-spinner>\\n<form *ngIf=\\\"!isLoading\\\" (submit)=\\\"onLogin(loginForm)\\\" #loginForm=\\\"ngForm\\\">\\n  <h1>Login</h1>\\n  <mat-form-field>\\n    <label for=\\\"email\\\">Email *</label>\\n    <input matInput ngModel #emailInput=\\\"ngModel\\\" type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" required email />\\n    <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter a valid email</mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <label for=\\\"password\\\">Password *</label>\\n    <input matInput ngModel #passwordInput=\\\"ngModel\\\" type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" required />\\n    <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter a valid password</mat-error>\\n  </mat-form-field>\\n  <div>\\n\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">LOGIN</button>\\n    <mat-spinner *ngIf=\\\"isLoading\\\" style=\\\"margin: auto\\\"></mat-spinner>\\n  </div>\\n</form>\"","module.exports = \"<mat-spinner *ngIf=\\\"isLoading\\\" style=\\\"margin: auto\\\"></mat-spinner>\\n<form *ngIf=\\\"!isLoading\\\" (submit)=\\\"onSignUp(singUpForm)\\\" #singUpForm=\\\"ngForm\\\">\\n  <h1>SignUp</h1>\\n  <mat-form-field>\\n      <label for=\\\"username\\\">Name *</label>\\n      <input matInput ngModel #userNameInput=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"username\\\" id=\\\"username\\\" required />\\n      <mat-error *ngIf=\\\"userNameInput.invalid\\\">Please enter a valid email</mat-error>\\n    </mat-form-field>\\n  <mat-form-field>\\n    <label for=\\\"email\\\">Email *</label>\\n    <input matInput ngModel #emailInput=\\\"ngModel\\\" type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" required email />\\n    <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter a valid email</mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <label for=\\\"password\\\">Password *</label>\\n    <input matInput ngModel #passwordInput=\\\"ngModel\\\" type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" required />\\n    <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter a valid password</mat-error>\\n  </mat-form-field>\\n  <div>\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" *ngIf=\\\"!isLoading\\\">SIGNUP</button>\\n    <mat-spinner *ngIf=\\\"isLoading\\\" style=\\\"margin: auto\\\"></mat-spinner>\\n  </div>\\n</form>\"","import { NgModule } from \"@angular/core\"\r\nimport { Routes, RouterModule } from \"@angular/router\"\r\nimport { LoginComponent } from \"./login/login.component\"\r\nimport { SignupComponent } from \"./signup/signup.component\"\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"login\",\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: \"signup\",\r\n    component: SignupComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutesModule {}\r\n","import { NgModule } from \"@angular/core\"\r\nimport { LoginComponent } from \"./login/login.component\"\r\nimport { SignupComponent } from \"./signup/signup.component\"\r\nimport { CommonModule } from \"@angular/common\"\r\nimport { AngularMaterialModule } from \"src/app/ang-materia.module\"\r\nimport { FormsModule } from \"@angular/forms\"\r\nimport { AuthRoutesModule } from \"./auth-routing\"\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, SignupComponent],\r\n  imports: [CommonModule, AngularMaterialModule, FormsModule, AuthRoutesModule]\r\n})\r\nexport class WilfredAuthModule {}\r\n","module.exports = \"mat-form-field {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  /* background: rgb(41, 43, 47); */\\r\\n  font-size: 1.2rem;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  margin-top: 0.8rem;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n  /* color: #cecece; */\\r\\n  color: #747171;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxpQ0FBaUM7RUFDakMsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usb0JBQW9CO0VBQ3BCLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxubWF0LWNhcmQge1xyXG4gIC8qIGJhY2tncm91bmQ6IHJnYig0MSwgNDMsIDQ3KTsgKi9cclxuICBmb250LXNpemU6IDEuMnJlbTtcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICBtYXJnaW4tdG9wOiAwLjhyZW07XHJcbn1cclxuXHJcbmxhYmVsIHtcclxuICAvKiBjb2xvcjogI2NlY2VjZTsgKi9cclxuICBjb2xvcjogIzc0NzE3MTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { NgForm } from \"@angular/forms\"\nimport { AuthService } from \"src/app/services/auth.service\"\nimport { Subscription } from \"rxjs\"\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  isLoading = false\n  private authStatusSub: Subscription\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n      .getAuthStatus()\n      .subscribe(authStatus => {\n        this.isLoading = false\n      })\n  }\n\n  onLogin(form: NgForm) {\n    this.isLoading = true\n    this.authService.loginUser(form.value.email, form.value.password)\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe()\n  }\n}\n","module.exports = \"mat-form-field {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  /* background: rgb(41, 43, 47); */\\r\\n  font-size: 1.2rem;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  margin-top: 0.8rem;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n  /* color: #cecece; */\\r\\n  color: #747171;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hdXRoL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGlDQUFpQztFQUNqQyxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxvQkFBb0I7RUFDcEIsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbm1hdC1jYXJkIHtcclxuICAvKiBiYWNrZ3JvdW5kOiByZ2IoNDEsIDQzLCA0Nyk7ICovXHJcbiAgZm9udC1zaXplOiAxLjJyZW07XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgbWFyZ2luLXRvcDogMC44cmVtO1xyXG59XHJcblxyXG5sYWJlbCB7XHJcbiAgLyogY29sb3I6ICNjZWNlY2U7ICovXHJcbiAgY29sb3I6ICM3NDcxNzE7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, OnDestroy } from \"@angular/core\"\nimport { NgForm } from \"@angular/forms\"\nimport { AuthService } from \"src/app/services/auth.service\"\nimport { Subscription } from \"rxjs\"\n\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.css\"]\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  isLoading = false\n  authStatusSub: Subscription\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n      .getAuthStatus()\n      .subscribe(authStatus => {\n        this.isLoading = false\n      })\n  }\n\n  onSignUp(form: NgForm) {\n    this.isLoading = true\n    if (form.invalid) {\n      console.log(\"INVALID\")\n      return\n    }\n\n    this.authService.createUser(\n      form.value.email,\n      form.value.password,\n      form.value.username\n    )\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe()\n  }\n}\n"],"sourceRoot":""}